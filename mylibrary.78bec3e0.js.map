{"mappings":"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","sources":["src/library-index.js","src/js/library-js/libraryGetRefs.js","src/js/library-js/libraryRenderMarkup.js","src/js/library-js/library.js","src/js/library-js/library-queue.js","src/js/library-js/libraryOpenModal.js"],"sourcesContent":["import './js/team-modal.js';\nimport './js/library-js/library.js';\nimport './js/library-js/library-queue.js';\nimport './js/library-js/libraryOpenModal.js';\nimport './js/scroll-up.js';\n","const libraryGetRefs = () => {\n  return {\n    modal: document.querySelector('.modal'),\n    containerListRef: document.querySelector('.container__list'),\n    modalCloseBtnRef: document.querySelector('.modal__close'),\n    modalFilm: document.querySelector('.modal__film'),\n    modalContainer: document.querySelector('.modal__conteiner'),\n    watchedBthRef: document.querySelector('.js-btn-watched-render'),\n    queueBtnRef: document.querySelector('.js-btn-queue-render'),\n    emptyListContainer: document.querySelector('.js-empty-list-container'),\n  };\n};\nexport default libraryGetRefs;\n","export function libraryRenderMarkup({\n  id,\n  genres,\n  title,\n  vote_average,\n  release_date,\n  poster_path,\n}) {\n  let genresCreate = genres.map(({ name }) => {\n    return name;\n  });\n  if (genresCreate.length > 2) {\n    genresCreate = genresCreate.slice(0, 2).join(', ') + `, Other`;\n  } else {\n    genresCreate = genresCreate.join(', ');\n  }\n  return `\n    <li class=\"film-card__item\" data-id=${id}>\n      <img class=\"film-card__img\"  src=\"https://image.tmdb.org/t/p/w500/${poster_path} \" alt=\"film poster\"  />\n    <h2 class=\"film-card__title\">${title}</h2>\n    <div class=\"film-card__flex\">\n    <p class=\"film-card__flex__text\">${genresCreate} |\n    </p>\n    <p class=\"film-card__flex__text\">${release_date.slice(0, -6)}</p>\n    <p class=\"film-card__flex__rating\">${vote_average.toFixed(1)}</p>\n    </div>\n    </li>\n`;\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { libraryRenderMarkup } from './libraryRenderMarkup.js';\nimport Notiflix, { Notify } from 'notiflix';\n\nconst movieAPI = new MovieAPI();\n\nconst LOCAL_STORAGE_WATCHED_KEY = 'WATCHED';\nlocalStorage.getItem(LOCAL_STORAGE_WATCHED_KEY);\nconst receivedDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_WATCHED_KEY)\n);\nlibraryGetRefs().watchedBthRef.addEventListener('click', onWatchBtnHandle);\n// onWatchBtnHandle();\n\nfunction onWatchBtnHandle() {\n  if (receivedDataWatched === null || receivedDataWatched.length === 0) {\n    Notify.warning('Please go to home page and add movie to \"Watched\" list');\n    libraryGetRefs().emptyListContainer.classList.remove('is-hidden');\n    libraryGetRefs().containerListRef.innerHTML = '';\n    return;\n  } else if (\n    !libraryGetRefs().emptyListContainer.classList.contains('is-hidden')\n  ) {\n    libraryGetRefs().emptyListContainer.classList.add('is-hidden');\n  }\n  libraryGetRefs().containerListRef.innerHTML = '';\n\n  const markup = receivedDataWatched\n    .map(element => {\n      return libraryRenderMarkup(element);\n    })\n    .join('');\n  libraryGetRefs().containerListRef.insertAdjacentHTML('beforeend', markup);\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { libraryRenderMarkup } from './libraryRenderMarkup.js';\nimport Notiflix, { Notify } from 'notiflix';\n\nconst movieAPI = new MovieAPI();\n\nconst LOCAL_STORAGE_QUEUE_KEY = 'QUEUE';\n\nlocalStorage.getItem(LOCAL_STORAGE_QUEUE_KEY);\nconst receivedDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_QUEUE_KEY)\n);\n\nlibraryGetRefs().queueBtnRef.addEventListener('click', onQueueBtnHandle);\n\nfunction onQueueBtnHandle() {\n  if (receivedDataWatched === null || receivedDataWatched.length === 0) {\n    Notify.warning('Please go to home page and add movie to \"Watched\" list');\n    libraryGetRefs().emptyListContainer.classList.remove('is-hidden');\n    libraryGetRefs().containerListRef.innerHTML = '';\n    return;\n  } else if (\n    !libraryGetRefs().emptyListContainer.classList.contains('is-hidden')\n  ) {\n    libraryGetRefs().emptyListContainer.classList.add('is-hidden');\n  }\n  libraryGetRefs().containerListRef.innerHTML = '';\n  const markup = receivedDataWatched\n    .map(element => {\n      return libraryRenderMarkup(element);\n    })\n    .join('');\n  libraryGetRefs().containerListRef.insertAdjacentHTML('beforeend', markup);\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { renderModalMarkup } from '../renderModalMarkup';\nimport Notiflix, { Notify } from 'notiflix';\n\nimport getRefs from '../getRefs';\nconst modal = document.querySelector('.modal');\n\nconst movieAPI = new MovieAPI();\n\nlibraryGetRefs().containerListRef.addEventListener(\n  'click',\n  onFilmCardClickHandle\n);\n\nfunction onFilmCardClickHandle(evt) {\n  let id = evt.target.closest('.film-card__item').dataset.id;\n  if (evt.target === evt.currentTarget) {\n    return;\n  }\n  libraryGetRefs().modal.classList.remove('is-hidden');\n  document.addEventListener('keydown', onEscapeCloseHandle);\n  libraryGetRefs().modalContainer.addEventListener(\n    'click',\n    onModalContainerClickHandle\n  );\n  movieAPI\n    .getFilms(id)\n    .then(result => {\n      const markup = renderModalMarkup(result);\n\n      modal.style.backgroundImage = `linear-gradient(to right, rgba(47, 48, 58, 0.9), rgba(47, 48, 58, 0.9)),\n\t\turl(https://image.tmdb.org/t/p/w500/${result.backdrop_path})`;\n      modal.style.backgroundSize = 'cover';\n\n      libraryGetRefs().modalFilm.innerHTML = markup;\n    })\n    // Adding functioning for buttons\n    .then(() => {\n      onAddButtonsFunctinal();\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      getRefs().loaderModal.classList.add('visually-hidden');\n    });\n}\n\nlibraryGetRefs().modalCloseBtnRef.addEventListener(\n  'click',\n  onModalCloseBtnHandle\n);\n\nfunction onModalCloseBtnHandle() {\n  libraryGetRefs().modal.classList.add('is-hidden');\n  document.removeEventListener('keydown', onEscapeCloseHandle);\n  libraryGetRefs().modalContainer.removeEventListener(\n    'click',\n    onModalContainerClickHandle\n  );\n}\n\nfunction onModalContainerClickHandle(evt) {\n  if (evt.target === evt.currentTarget) {\n    onModalCloseBtnHandle();\n  }\n}\nfunction onEscapeCloseHandle(evt) {\n  if (evt.key === 'Escape') {\n    onModalCloseBtnHandle();\n  }\n}\nfunction onAddButtonsFunctinal() {\n  const addToWatchedBtnRef = document.querySelector('.js-btn-watched');\n  addToWatchedBtnRef.addEventListener('click', onAddToWatchedHandle);\n  // --------------цей код додано мною\n  const addToQueueBtnRef = document.querySelector('.js-btn-queue');\n  addToQueueBtnRef.addEventListener('click', onAddToQueueHandle);\n}\n// -----------------------------------------------------------------\nlet watchedMoviesArr = [];\nconst LOCAL_STORAGE_WATCHED = 'WATCHED';\nlet queueMoviesArr = [];\nconst LOCAL_STORAGE_QUEUE = 'QUEUE';\n\nconst onAddToWatchedHandle = evt => {\n  let id = evt.target.dataset.id;\n  const addToWatchedBtnRef = document.querySelector('.js-btn-watched');\n  if (localStorage.getItem(LOCAL_STORAGE_WATCHED) !== null) {\n    watchedMoviesArr = [\n      ...JSON.parse(localStorage.getItem(LOCAL_STORAGE_WATCHED)),\n    ];\n  }\n  // check for unique value(id)\n  if (!watchedMoviesArr.includes(id)) {\n    watchedMoviesArr.push(id);\n    Notify.success('Film add to watched');\n    addToWatchedBtnRef.textContent = 'Remove from watched';\n  } else {\n    watchedMoviesArr = watchedMoviesArr.filter(film => Number(film) !== id);\n    Notify.warning('Film Remove from watched');\n    let index = watchedMoviesArr.indexOf(id);\n    watchedMoviesArr.splice(index, 1);\n    addToWatchedBtnRef.textContent = 'Add to watched';\n  }\n\n  try {\n    const serializedState = JSON.stringify(watchedMoviesArr);\n    localStorage.setItem(LOCAL_STORAGE_WATCHED, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\n// --------------onAddToQueueHandle\nconst onAddToQueueHandle = evt => {\n  let id = evt.target.dataset.id;\n  if (localStorage.getItem(LOCAL_STORAGE_QUEUE) !== null) {\n    queueMoviesArr = [...JSON.parse(localStorage.getItem(LOCAL_STORAGE_QUEUE))];\n  }\n  // check for unique value(id)\n  if (!queueMoviesArr.includes(id)) {\n    queueMoviesArr.push(id);\n    Notify.success('Фільм додано');\n    evt.target.textContent = 'Remove from queue';\n  } else {\n    queueMoviesArr = queueMoviesArr.filter(film => Number(film) !== id);\n    Notify.warning('Film Remove from queue');\n    let index = queueMoviesArr.indexOf(id);\n    queueMoviesArr.splice(index, 1);\n    evt.target.textContent = 'Add to queue';\n  }\n  try {\n    const serializedState = JSON.stringify(queueMoviesArr);\n    localStorage.setItem(LOCAL_STORAGE_QUEUE, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n"],"names":["parcelRequire","$5b1d70604403000b$export$2e2bcd8739ae039","modal","document","querySelector","containerListRef","modalCloseBtnRef","modalFilm","modalContainer","watchedBthRef","queueBtnRef","emptyListContainer","$b50bdd6edab182ea$export$e66b2d78411a22fb","id","genres","title","vote_average","release_date","poster_path","genresCreate","map","name","length","slice","join","toFixed","$9Bkxl","MovieAPI","localStorage","getItem","$8d8dcee2ecb58d73$var$receivedDataWatched","JSON","parse","addEventListener","$eWCmQ","Notify","warning","classList","remove","innerHTML","contains","add","markup","element","insertAdjacentHTML","$d3b755b89a5d4914$var$receivedDataWatched","$8c344999231b5261$var$modal","$8c344999231b5261$var$movieAPI","$8c344999231b5261$var$onModalCloseBtnHandle","removeEventListener","$8c344999231b5261$var$onEscapeCloseHandle","$8c344999231b5261$var$onModalContainerClickHandle","evt","target","currentTarget","key","closest","dataset","getFilms","then","result","$2zc8m","renderModalMarkup","style","backgroundImage","backdrop_path","backgroundSize","$8c344999231b5261$var$onAddToWatchedHandle","$8c344999231b5261$var$onAddToQueueHandle","$8c344999231b5261$var$onAddButtonsFunctinal","catch","error","console","log","finally","$1DTXP","default","loaderModal","$8c344999231b5261$var$watchedMoviesArr","$8c344999231b5261$var$queueMoviesArr","addToWatchedBtnRef","includes","filter","film","Number","index","indexOf","splice","textContent","push","success","serializedState","stringify","setItem","message"],"version":3,"file":"mylibrary.78bec3e0.js.map"}
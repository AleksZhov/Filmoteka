{"mappings":"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","sources":["src/library-index.js","src/js/library-js/libraryGetRefs.js","src/js/library-js/libraryRenderMarkup.js","src/js/library-js/library.js","src/js/library-js/library-queue.js","src/js/library-js/libraryOpenModal.js"],"sourcesContent":["import './js/team-modal.js';\nimport './js/library-js/library.js';\nimport './js/library-js/library-queue.js';\nimport './js/library-js/libraryOpenModal.js';\nimport './js/scroll-up.js';\n","const libraryGetRefs = () => {\n  return {\n    modal: document.querySelector('.modal'),\n    containerListRef: document.querySelector('.container__list'),\n    modalCloseBtnRef: document.querySelector('.modal__close'),\n    modalFilm: document.querySelector('.modal__film'),\n    modalContainer: document.querySelector('.modal__conteiner'),\n    watchedBthRef: document.querySelector('.js-btn-watched-render'),\n    queueBtnRef: document.querySelector('.js-btn-queue-render'),\n    emptyListContainer: document.querySelector('.js-empty-list-container'),\n  };\n};\nexport default libraryGetRefs;\n","export function libraryRenderMarkup({\n  id,\n  genres,\n  title,\n  vote_average,\n  release_date,\n  poster_path,\n}) {\n  let genresCreate = genres.map(({ name }) => {\n    return name;\n  });\n  if (genresCreate.length > 2) {\n    genresCreate = genresCreate.slice(0, 2).join(', ') + `, Other`;\n  } else {\n    genresCreate = genresCreate.join(', ');\n  }\n  return `\n    <li class=\"film-card__item\" data-id=${id}>\n      <img class=\"film-card__img\"  src=\"https://image.tmdb.org/t/p/w500/${poster_path} \" alt=\"film poster\"  />\n    <h2 class=\"film-card__title\">${title}</h2>\n    <div class=\"film-card__flex\">\n    <p class=\"film-card__flex__text\">${genresCreate} |\n    </p>\n    <p class=\"film-card__flex__text\">${release_date.slice(0, -6)}</p>\n    <p class=\"film-card__flex__rating\">${vote_average.toFixed(1)}</p>\n    </div>\n    </li>\n`;\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { libraryRenderMarkup } from './libraryRenderMarkup.js';\nimport Notiflix, { Notify } from 'notiflix';\n\nconst movieAPI = new MovieAPI();\n\nconst LOCAL_STORAGE_WATCHED_KEY = 'WATCHED';\nlocalStorage.getItem(LOCAL_STORAGE_WATCHED_KEY);\nconst receivedDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_WATCHED_KEY)\n);\nlibraryGetRefs().watchedBthRef.addEventListener('click', onWatchBtnHandle);\n\nfunction onWatchBtnHandle() {\n  if (receivedDataWatched === null) {\n    Notify.warning('Please go to home page and add movie to \"Watched\" list');\n    libraryGetRefs().emptyListContainer.classList.remove('is-hidden');\n    return;\n  }\n  libraryGetRefs().containerListRef.innerHTML = '';\n\n  const markup = receivedDataWatched\n    .map(element => {\n      return libraryRenderMarkup(element);\n    })\n    .join('');\n  libraryGetRefs().containerListRef.insertAdjacentHTML('beforeend', markup);\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { libraryRenderMarkup } from './libraryRenderMarkup.js';\nimport Notiflix, { Notify } from 'notiflix';\n\nconst movieAPI = new MovieAPI();\n\nconst LOCAL_STORAGE_QUEUE_KEY = 'QUEUE';\n\nlocalStorage.getItem(LOCAL_STORAGE_QUEUE_KEY);\nconst receivedDataWatched = JSON.parse(\n  localStorage.getItem(LOCAL_STORAGE_QUEUE_KEY)\n);\n\nlibraryGetRefs().queueBtnRef.addEventListener('click', onQueueBtnHandle);\n\nfunction onQueueBtnHandle() {\n  if (receivedDataWatched === null) {\n    Notify.warning('Please go to home page and add movie to \"Watched\" list');\n    libraryGetRefs().emptyListContainer.classList.remove('is-hidden');\n    return;\n  }\n  libraryGetRefs().containerListRef.innerHTML = '';\n  const markup = receivedDataWatched\n    .map(element => {\n      return libraryRenderMarkup(element);\n    })\n    .join('');\n  libraryGetRefs().containerListRef.insertAdjacentHTML('beforeend', markup);\n}\n","import libraryGetRefs from './libraryGetRefs.js';\nimport { MovieAPI } from '../movieAPI.js';\nimport { renderModalMarkup } from '../renderModalMarkup';\nimport Notiflix, { Notify } from 'notiflix';\nimport getRefs from '../getRefs';\n\nconst movieAPI = new MovieAPI();\nlet watchedMoviesArr = [];\nconst LOCAL_STORAGE_WATCHED = 'WATCHED';\nlet queueMoviesArr = [];\nconst LOCAL_STORAGE_QUEUE = 'QUEUE';\n\nlibraryGetRefs().containerListRef.addEventListener(\n  'click',\n  onFilmCardClickHandle\n);\n\nfunction onFilmCardClickHandle(evt) {\n  let id = evt.target.closest('.film-card__item').dataset.id;\n  if (evt.target === evt.currentTarget) {\n    return;\n  }\n  libraryGetRefs().modal.classList.remove('is-hidden');\n  document.addEventListener('keydown', onEscapeCloseHandle);\n  libraryGetRefs().modalContainer.addEventListener(\n    'click',\n    onModalContainerClickHandle\n  );\n  movieAPI\n    .getFilms(id)\n    .then(result => {\n      console.log(result);\n      const markup = renderModalMarkup(result);\n\n      libraryGetRefs().modalFilm.innerHTML = markup;\n\n      onAddButtonsFunctinal(result);\n    })\n    // Adding functioning for buttons\n\n    .catch(error => console.log(error))\n    .finally(() => {\n      getRefs().loaderModal.classList.add('visually-hidden');\n    });\n}\n\nlibraryGetRefs().modalCloseBtnRef.addEventListener(\n  'click',\n  onModalCloseBtnHandle\n);\n\nfunction onModalCloseBtnHandle() {\n  libraryGetRefs().modal.classList.add('is-hidden');\n  document.removeEventListener('keydown', onEscapeCloseHandle);\n  libraryGetRefs().modalContainer.removeEventListener(\n    'click',\n    onModalContainerClickHandle\n  );\n}\n\nfunction onModalContainerClickHandle(evt) {\n  if (evt.target === evt.currentTarget) {\n    onModalCloseBtnHandle();\n  }\n}\nfunction onEscapeCloseHandle(evt) {\n  if (evt.key === 'Escape') {\n    onModalCloseBtnHandle();\n  }\n}\nfunction onAddButtonsFunctinal(result) {\n  currentResult = result;\n  const addToWatchedBtnRef = document.querySelector('.js-btn-watched');\n  addToWatchedBtnRef.addEventListener('click', onAddToWatchedHandle);\n  if (localStorage.getItem(LOCAL_STORAGE_WATCHED) !== null) {\n    watchedMoviesArr = [\n      ...JSON.parse(localStorage.getItem(LOCAL_STORAGE_WATCHED)),\n    ];\n  }\n  console.log(watchedMoviesArr.some(({ id }) => id === result.id));\n  if (watchedMoviesArr.some(({ id }) => id === result.id)) {\n    console.log('Check');\n\n    addToWatchedBtnRef.textContent = 'Remove from watched';\n  }\n  // --------------цей код додано мною\n  if (localStorage.getItem(LOCAL_STORAGE_QUEUE) !== null) {\n    queueMoviesArr = [...JSON.parse(localStorage.getItem(LOCAL_STORAGE_QUEUE))];\n  }\n  const addToQueueBtnRef = document.querySelector('.js-btn-queue');\n  addToQueueBtnRef.addEventListener('click', onAddToQueueHandle);\n  if (queueMoviesArr.some(({ id }) => id === result.id)) {\n    console.log('Check');\n\n    addToQueueBtnRef.textContent = 'Remove from queue';\n  }\n}\n// -----------------------------------------------------------------\n\nconst onAddToWatchedHandle = evt => {\n  let filmObject = currentResult;\n  // let id = filmObject.id;\n  const addToWatchedBtnRef = document.querySelector('.js-btn-watched');\n  if (localStorage.getItem(LOCAL_STORAGE_WATCHED) !== null) {\n    watchedMoviesArr = [\n      ...JSON.parse(localStorage.getItem(LOCAL_STORAGE_WATCHED)),\n    ];\n  }\n  // check for unique value(id)\n\n  console.log(filmObject);\n  if (watchedMoviesArr.lenght === 0) {\n    watchedMoviesArr.push(filmObject);\n    Notify.success('Film add to watched');\n    addToWatchedBtnRef.textContent = 'Remove from watched';\n  } else if (!watchedMoviesArr.some(({ id }) => id === filmObject.id)) {\n    watchedMoviesArr.push(filmObject);\n    Notify.success('Film add to watched');\n    addToWatchedBtnRef.textContent = 'Remove from watched';\n  } else {\n    watchedMoviesArr = watchedMoviesArr.filter(\n      film => Number(film) !== filmObject.id\n    );\n    Notify.warning('Film Remove from watched');\n    let index = watchedMoviesArr.findIndex(({ id }) => id === filmObject.id);\n    watchedMoviesArr.splice(index, 1);\n    addToWatchedBtnRef.textContent = 'Add to watched';\n  }\n\n  try {\n    const serializedState = JSON.stringify(watchedMoviesArr);\n    localStorage.setItem(LOCAL_STORAGE_WATCHED, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n// --------------onAddToQueueHandle\nconst onAddToQueueHandle = evt => {\n  let filmObject = currentResult;\n  const addToQueueBtnRef = document.querySelector('.js-btn-queue');\n  if (localStorage.getItem(LOCAL_STORAGE_QUEUE) !== null) {\n    queueMoviesArr = [...JSON.parse(localStorage.getItem(LOCAL_STORAGE_QUEUE))];\n  }\n  // check for unique value(id)\n  if (queueMoviesArr.lenght === 0) {\n    queueMoviesArr.push(filmObject);\n    Notify.success('Film added to queue');\n    addToQueueBtnRef.textContent = 'Remove from queue';\n  } else if (!queueMoviesArr.some(({ id }) => id === filmObject.id)) {\n    queueMoviesArr.push(filmObject);\n    Notify.success('Film added to queue');\n    addToQueueBtnRef.textContent = 'Remove from queue';\n  } else {\n    queueMoviesArr = queueMoviesArr.filter(\n      film => Number(film) !== filmObject.id\n    );\n    Notify.warning('Film Removed from queue');\n    let index = queueMoviesArr.findIndex(({ id }) => id === filmObject.id);\n    console.log(index);\n    queueMoviesArr.splice(index, 1);\n    addToQueueBtnRef.textContent = 'Add to queue';\n  }\n  try {\n    const serializedState = JSON.stringify(queueMoviesArr);\n    localStorage.setItem(LOCAL_STORAGE_QUEUE, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n"],"names":["parcelRequire","$5b1d70604403000b$export$2e2bcd8739ae039","modal","document","querySelector","containerListRef","modalCloseBtnRef","modalFilm","modalContainer","watchedBthRef","queueBtnRef","emptyListContainer","$b50bdd6edab182ea$export$e66b2d78411a22fb","id","genres","title","vote_average","release_date","poster_path","genresCreate","map","name","length","slice","join","toFixed","$9Bkxl","MovieAPI","localStorage","getItem","$8d8dcee2ecb58d73$var$receivedDataWatched","JSON","parse","addEventListener","$eWCmQ","Notify","warning","classList","remove","innerHTML","markup","element","insertAdjacentHTML","$d3b755b89a5d4914$var$receivedDataWatched","$8c344999231b5261$var$movieAPI","$8c344999231b5261$var$watchedMoviesArr","$8c344999231b5261$var$queueMoviesArr","$8c344999231b5261$var$onModalCloseBtnHandle","add","removeEventListener","$8c344999231b5261$var$onEscapeCloseHandle","$8c344999231b5261$var$onModalContainerClickHandle","evt","target","currentTarget","key","closest","dataset","getFilms","then","result","console","log","$2zc8m","renderModalMarkup","currentResult","addToWatchedBtnRef","$8c344999231b5261$var$onAddToWatchedHandle","some","textContent","addToQueueBtnRef","$8c344999231b5261$var$onAddToQueueHandle","$8c344999231b5261$var$onAddButtonsFunctinal","catch","error","finally","$1DTXP","default","loaderModal","filmObject","lenght","push","success","filter","film","Number","index","findIndex","splice","serializedState","stringify","setItem","message"],"version":3,"file":"mylibrary.2a423c59.js.map"}